version: "3"

services:
  frontend:
    container_name: frontend
    build: ./frontend
    restart: always
    ports:
      - "5173:5173"
    depends_on:
      postgres:
        condition: service_healthy
      backend:
        condition: service_started
    networks:
      - tcnetwork
    environment:
      VITE_FRONT_ADDRESS: "${VITE_FRONT_ADDRESS}"

  backend:
    container_name: backend
    build: ./backend
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tcnetwork

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    expose:
      - "5432"
    networks:
      - tcnetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./data:/var/lib/postgresql/data

networks:
  tcnetwork:
    driver: bridge
